# 정수 n을 입력받기
n = int(input()) 
# 모든 식량 정보 입력받기
array = list(map(int, input().split())) 

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 100 

# 다이나믹 프로그래밍 진행(보텀업) 
d[0] = array[0] 
d[1] = array[1]
for i in range(2, n):
    d[i] = max(d[i], d[i - 2] + array[i]) 

# 계산된 결과 출력
print(d[n - 1]) 

# i를 탐색할때 i - 3이하는 탐색할 필요 없다.
# 왜냐하면 인덱스 0, 1이 지정이 되어 있는 상태에서 2부터 반복문을 돌리는데 2를 돌릴때 0, 1이 탐색되고
# 3을 돌릴때 1, 2가 탐색되고 마지막 n-1까지 가서 멈추기 때문에 상관없다. 
# 바텀업 방식이라서 i번째를 탐색할때 i - 1, i - 2를 다루게 되는데 i - 1, i - 2에는 이미 이전 값들중 최대값이 포함되어있다.