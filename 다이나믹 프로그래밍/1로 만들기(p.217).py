# 정수 x를 입력받기
x = int(input()) 

# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화 
d = [0] * 30001 

# 다이나믹 프로그래밍 진행(보텀업) 
# 맨 밑은 1이고  1이 되는데 까지의 횟수를 밑에서부터 올라가는 거니까 
# 2에서 시작하고 x에서 멈춤 
for i in range(2, x + 1): 
    # 현재의 수에서 1을 빼는 경우
    # 모든 경우는 1을 뺄 수 있으니까 현재 값은 1을 뺀 값에 호출 횟수 1을 더한것으로 처음엔 지정
    d[i] = d[i - 1] + 1
    # 현재의 수가 2로 나누어 떨어지는 경우
    # 한 개의 간선으로 연결되어 있으니 나누어 떨어진 값에 1(간선 개수) 추가 
    # 그리고 처음 지정한 것과 둘 중 작은것 비교 
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1) 
    # 현재의 수가 3으로 나누어 떨어지는 경우
    # 위와 동일한 이유로 반복 
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1) 
    # 현재의 수가 5로 나누어 떨어지는 경우
    # 위와 동일한 이유로 반복 
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1) 
# 다 끝나면 x까지의 최소 횟수가 구해짐 
print(d[x]) 